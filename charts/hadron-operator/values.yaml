## Services for the Operator.
service:
  ## The K8s service used for client interaction with the operator.
  client:
    annotations: {}
    labels: {}
    port: 7000
  ## The K8s service used for K8s webhooks.
  webhooks:
    annotations: {}
    labels: {}
    port: 7001
  ## The K8s service used for metrics & healthchecks.
  metrics:
    annotations: {}
    labels: {}
    port: 7002

## Deployment spec.
deployment:
  replicas: 3
  annotations: {}
  labels: {}

## Pod spec.
pod:
  annotations: {}
  labels: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints: []
  securityContext: {}
  imagePullSecrets: []

## Operator's container spec.
container:
  ## Operator image.
  image:
    repo: ghcr.io/hadron-project/hadron/hadron-operator
    ## For production use, never set this tag to `latest`, otherwise you are asking for trouble.
    tag: v0.1.0-beta.1
    pullPolicy: IfNotPresent

  ## The port used for client interaction with the operator.
  clientPort: 7000
  ## The port used for K8s webhooks.
  webhooksPort: 7001
  ## The port used for metrics & healthchecks.
  metricsPort: 7002

  ## Operator's container resources.
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  ## Operator env vars.
  env:
    ## Logging configuration.
    logging: "error,hadron_operator=trace,hadron_core=trace"

    ## K8s Leadership Config
    lease:
      ## The duration in seconds for which a lease is considered held.
      durationSeconds: 60
      ## The duration that a lease holder will retry refreshing lease.
      renewSeconds: 10

    ## VAW Config
    vaw:
      ## The value to use for the VAW webhook cert. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom` as the default does.
      ## The default value works with the cert-manager integration.
      webhookCert:
        valueFrom:
          secretKeyRef:
            name: hadron-webhooks
            key: tls.crt
      ## The value to use for the VAW webhook key. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom` as the default does.
      ## The default value works with the cert-manager integration.
      webhookKey:
        valueFrom:
          secretKeyRef:
            name: hadron-webhooks
            key: tls.key

vaw:
  ## The CA bundle used by the Validating Admissions Webhook.
  ##
  ## When using the cert-manager integration, this value should be left as an empty string, and
  ## cert-manager will populate the field dynamically.
  caBundle: ""

## Optional cert-manager integrations.
##
## When enabled (default), this chart will generate a self-signing Issuer and a Certificate
## generated from that Issuer. These will be used to secure the VAW's network interface which is
## required by K8s.
##
## This will also inject the Certificate's corresponding CA bundle into the VAW webhook resource.
certManager:
  enabled: true

## Optional Prometheus Operator integration.
prometheusOperator:
  enabled: false
  ## The ServiceMonitor used to monitor the Hadron Operator itself.
  serviceMonitor:
    annotations: {}
    ## Ensure that a well-defined label is added here so that the ServiceMonitor is detected by
    ## the Prometheus Operator and actually used, else you will not see any metrics.
    labels: {}
  ## The PodMonitor used to monitor all Hadron Streams created and managed by the Hadron Operator.
  podMonitor:
    annotations: {}
    ## Ensure that a well-defined label is added here so that the PodMonitor is detected by
    ## the Prometheus Operator and actually used, else you will not see any metrics.
    labels: {}
