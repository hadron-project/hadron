## Services for the Operator.
service:
  client:
    annotations: {}
    labels: {}
    port: 7000
  webhooks:
    annotations: {}
    labels: {}
    port: 7001

## Deployment spec.
deployment:
  replicas: 3
  annotations: {}
  labels: {}

## Pod spec.
pod:
  annotations: {}
  labels: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints: []
  securityContext: {}
  imagePullSecrets: []

## Operator's container spec.
container:
  ## Operator image.
  image:
    repo: ghcr.io/hadron-project/hadron/hadron-operator
    tag: latest
    pullPolicy: IfNotPresent

  ## The port used for client connections.
  clientPort: 7000
  ## The port used for HTTP webhooks & healthchecks.
  httpPort: 7001

  ## Operator's container resources.
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  ## Operator env vars.
  env:
    ## Logging configuration.
    logging: "error,hadron_operator=trace"

    ## K8s Leadership Config
    lease:
      ## The duration in seconds for which a lease is considered held.
      durationSeconds: 60
      ## The duration that a lease holder will retry refreshing lease.
      renewSeconds: 10

    ## JWT Config
    jwt:
      ## The value to use for referencing the JWT encoding key. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom`. EG:
      ## ```
      ## encodingKey:
      ##   valueFrom:
      ##     secretKeyRef:
      ##       name: secret-123
      ##       key: encodingKey
      ## ```
      encodingKey: null
      ## The value to use for referencing the JWT decoding key. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom`. EG:
      ## ```
      ## decodingKey:
      ##   valueFrom:
      ##     secretKeyRef:
      ##       name: secret-123
      ##       key: ecodingKey
      ## ```
      decodingKey: null

    ## VAW Config
    vaw:
      ## The value to use for the VAW webhook cert. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom` as the default does.
      ## The default value works with the cert-manager integration.
      webhookCert:
        valueFrom:
          secretKeyRef:
            name: hadron-webhooks
            key: tls.crt
      ## The value to use for the VAW webhook key. Will be inlined as YAML.
      ## Should have a single key `value` or `valueFrom` as the default does.
      ## The default value works with the cert-manager integration.
      webhookKey:
        valueFrom:
          secretKeyRef:
            name: hadron-webhooks
            key: tls.key

vaw:
  ## The CA bundle used by the Validating Admissions Webhook.
  ##
  ## When using the cert-manager integration, this value should be left as an empty string, and
  ## cert-manager will populate the field dynamically.
  caBundle: ""

## Optional cert-manager integrations.
##
## When enabled (default), this chart will generate a self-signing Issuer and a Certificate
## generated from that Issuer. These will be used to secure the VAW's network interface which is
## required by K8s.
##
## This will also inject the Certificate's corresponding CA bundle into the VAW webhook resource.
certManager:
  enabled: true
