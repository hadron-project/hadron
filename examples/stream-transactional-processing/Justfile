# Apply the Hadron full example resources.
applyExample:
    just ../../ applyExample

# Build new docker image for the demo app.
buildDemoApp tag="latest" mode="debug":
    #!/usr/bin/env bash
    set -euo pipefail
    case '{{mode}}' in
    'debug') opts='';;
    'release') opts='--build-arg=RELEASE_OPT=--release';;
    *) echo 'unrecognized value for `mode`, must be either `debug` or `release`'; exit 1;;
    esac

    docker build ${opts} --target builder -f Dockerfile .
    docker build ${opts} --target release -f Dockerfile -t ghcr.io/hadron-project/hadron/stream-txp:{{tag}} .

# Deploy the demo app & all needed Hadron resources.
deployDemoApp:
    kubectl --context="kind-hadron" apply -f deployment.yaml

# Deploy the Hadron Operator.
helmUp:
    just ../../ helmUp

# Deploy cert-manager.
helmUpCertManager:
    just ../../ helmUpCertManager

# Install a Postgres database into the cluster.
helmUpPostgres:
    helm repo add bitnami https://charts.bitnami.com/bitnami
    helm --kube-context="kind-hadron" install postgresql bitnami/postgresql --version 10.10.2 \
        --set fullnameOverride=postgres,postgresqlDatabase=postgres,postgresqlPassword=password

# Create the kind development cluster used for development in this repo.
kindCreateCluster:
    kind delete cluster --name hadron
    just ../../ kindCreateCluster

# Load docker image into kind cluster.
kindLoadDemoApp tag="latest":
    kind load docker-image --name hadron ghcr.io/hadron-project/hadron/stream-txp:{{tag}}

# Run the Hadron CLI within the kind cluster.
runCli tag="latest" pullPolicy="IfNotPresent":
    just ../../ runCli {{tag}} {{pullPolicy}}
