syntax = "proto3";
package api;

// Metadata related to an API frame.
message Meta {
  // The ID of this request or response frame.
  string id = 1;
}

// A peer to peer message frame.
message Frame {
  // The metadata of the frame.
  Meta meta = 1;
  // The payload of data for this frame.
  oneof payload {
    Disconnect disconnect = 2;
    Request request = 3;
    Response response = 4;
  }
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// Frame Variants ////////////////////////////////////////////////////////////////////////////////

// A request from a peer node.
message Request {
  oneof segment {
    Handshake handshake = 1;
    RaftRequest raft = 2;
  }
}

// A response to an earlier sent request.
message Response {
  oneof segment {
    Handshake handshake = 1;
    RaftResponse raft = 2;
  }
}

// A disconnect variant.
enum Disconnect {
  ConnectionInvalid = 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// Handshake /////////////////////////////////////////////////////////////////////////////////////

// A handshake frame holding all data needed for a successful handshake between peers.
message Handshake {
  uint64 node_id = 1;
  string routing_info = 2;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// Raft Request & Response ///////////////////////////////////////////////////////////////////////

// A Raft request.
message RaftRequest {
  oneof payload {
    bytes append_entries = 1;
    bytes vote = 2;
    bytes install_snapshot = 3;
  }
}

// A Raft response.
message RaftResponse {
  oneof payload {
    bytes append_entries = 1;
    bytes vote = 2;
    bytes install_snapshot = 3;
  }
}
