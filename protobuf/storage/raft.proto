syntax = "proto2";
package raft;

// A storage struct for a Raft log's metadata.
//
// This system uses a multiraft setup. All streams have their own Raft instance.
message RaftState {
  // The voting term.
  required uint64 term = 1;
  // The node ID which was voted for during `term`.
  required uint64 vote = 2;
  // The last commit index.
  required uint64 commit = 3;

  // All known voting members of the cluster.
  repeated uint64 nodes = 4 [packed=true];
  // All known learner members of the cluster.
  repeated uint64 learners = 5 [packed=true];
}

// A storage struct for the Railgun cluster's metadata.
//
// A base-line Raft metadata struct is embedded here for the cluster's Raft instance, and
// additional fields are used for the cluster's specific metadata.
message ClusterState {
  // The cluster's Raft metadata.
  required RaftState raft = 1;

  // All known streams by name.
  //
  // To ensure that there are no duplicates, a map is used here. The value is meaningless.
  map<string,uint32> streams = 2;
}
